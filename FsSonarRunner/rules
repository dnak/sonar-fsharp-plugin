[|"/displayRules"|]
RulesRaiseWithSingleArgument  = `raise` should have a single argument, further arguments will be ignored by the compiler.
RulesNumberOfItemsClassMembersError  = Class suggested to have a maximum of {0} members.
RulesTypographyTrailingLineError  = Found trailing whitespace line at end of file.
RulesNamingConventionsCamelCaseError  = Consider changing `{0}` to camelCase.
RulesNumberOfItemsBooleanConditionsError  = Conditions suggested to contain at most {0} boolean operators.
RulesNestedStatementsError  = Code suggested not to be nested more deeply than a depth of {0}.
RulesTypographyTabCharacterError  = Consider replacing tab (`\t`) with spaces.
RulesHintRefactor  = `{0}` might be able to be refactored into `{1}`.
RulesCanBeReplacedWithComposition  = Lambda may be able to be replaced with composition. e.g. `fun x -> x |> isValid |> not` could be replaced with `isValid >> not`.
RulesReimplementsFunction  = If `{0}` has no mutable arguments partially applied then the lambda can be removed.
RulesNamingConventionsExceptionError  = Consider changing `{0}` to be suffixed with 'Exception'.
RulesNumberOfItemsTupleError  = Tuple suggested to have a maximum of {0} items.
RulesFailwithWithSingleArgument  = `failwith` should have a single argument, further arguments will be ignored by the compiler.
RulesNamingConventionsUnderscoreError  = Consider changing `{0}` to remove any underscores.
RulesNullArgWithSingleArgument  = `nullArg` should have a single argument, further arguments will be ignored by the compiler.
LintSourceError  = Error on line {0} starting at column {1}
RulesInvalidOpWithSingleArgument  = `invalidOp` should have a single argument, further arguments will be ignored by the compiler.
RulesTypographyFileLengthError  = File suggested to be less than {0} lines long.
RulesUselessBindingError  = Binding appears to have no purpose.
RulesFavourIgnoreOverLetWildError  = The `ignore` function is usually favoured over `let _ = ...` when ignoring the result of an expression.
RulesInvalidArgWithTwoArguments  = `invalidArg` should have two arguments, further arguments will be ignored by the compiler.
RulesTypographyLineLengthError  = Line suggested to be less than {0} characters long.
RulesNumberOfItemsFunctionError  = Functions suggested to have a maximum of {0} parameters.
RulesNamingConventionsPascalCaseError  = Consider changing `{0}` to PascalCase.
RulesTupleOfWildcardsError  = A tuple of wildcards in a pattern can be replaced with a single wildcard. `{0}` can be replaced with `{1}`.
RulesWildcardNamedWithAsPattern  = Unnecessary wildcard named using the as pattern, the wildcard can be removed e.g. `_ as x` replaced with `x`.
RulesTypographyTrailingWhitespaceError  = Found trailing whitespace at end of line.
LintError  = Error in file {0} on line {1} starting at column {2}
RulesSourceLengthError  = {0} was {2} lines long, suggested to be less than {1} lines long.
RulesNamingConventionsInterfaceError  = Consider changing `{0}` to be prefix with 'I'.
RulesHintSuggestion  = `{0}`; suggestion: {1}.
RulesFailwithfWithArgumentsMatchingFormatString  = `failwithf` has more arguments than were found in its format string, these further arguments will be ignored by the compiler.

 Total Rules: 32
